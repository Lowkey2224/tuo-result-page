<?php

namespace App\LokiTuoResultBundle\Repository;

//use Doctrine\ORM\Query\Expr\Join;

/**
 * PlayerRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlayerRepository extends AbstractBaseRepository
{
    public function getPlayerWithLastUpdatedDate($active = true)
    {
        $qb = $this->createQueryBuilder('p')
            ->leftJoin('p.ownedCards', 'ownedCards')
            ->addSelect(['max(ownedCards.updatedAt) as updated'])
            ->groupBy('p.id');
        if ($active) {
            $qb->where('p.active = :active')
                ->setParameter('active', $active);
        }

        return $qb->getQuery()->getResult();
    }

    public function findAllWithCredentials()
    {
        $qb = $this->createQueryBuilder('p')
            ->join('p.kongCredentials', 'kongCredentials')
            ->addSelect(['kongCredentials'])
            ->where('p.active = :active')
            ->setParameter('active', true);


        return $qb->getQuery()->getResult();
    }

    public function findWithOwnedCards($id)
    {
        $qb = $this->createQueryBuilder('player')
            ->leftJoin('player.ownedCards', 'ownedCards')
            ->leftJoin('ownedCards.card', 'cardLevel')
            ->leftJoin('cardLevel.card', 'card')
            ->addSelect(['ownedCards'])
            ->addSelect(['cardLevel'])
            ->addSelect(['card'])
            ->where('player.id = :id')
            ->setParameter('id', $id);

        return $qb->getQuery()->getSingleResult();
    }
}
