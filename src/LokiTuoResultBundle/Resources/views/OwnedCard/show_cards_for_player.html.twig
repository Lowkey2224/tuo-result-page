{% extends "::base.html.twig" %}

{% block title %}{{ 'ownedcard.show.title %name%'|trans({'%name%' : player.name}) }}{% endblock %}

{% block body %}

    {% if canEdit %}
        <!-- Modal -->
        <div class="modal fade" id="addOwnedCardModal" tabindex="-1" role="dialog"
             aria-labelledby="addOwnedCardModalLabel">
            <div class="modal-dialog" role="document">
                {{ form_start(form) }}
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                    aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="addOwnedCardModalLabel">Add a single Card</h4>
                    </div>
                    <div class="modal-body ui-front">
                        <div id="jsFlash"></div>

                        <div class=" ui-widget form-group">
                            {{ form_row(form.card) }}
                        </div>

                        <div class="form-group">
                            {{ form_row(form.level) }}
                        </div>

                        <div class="form-group">
                            {{ form_row(form.amount) }}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        {{ form_widget(form.submit, {'attr' : {'class': 'btn btn-success'}}) }}

                        {#<button type="button" class="btn btn-primary">Save changes</button>#}
                    </div>
                </div>
                {{ form_end(form) }}
            </div>
        </div>
        {#  Mass add Form  #}
        <div class="modal fade" id="massAddOwnedCardModal" tabindex="-1" role="dialog"
             aria-labelledby="massAddOwnedCardModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                    aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="massAddOwnedCardModalLabel">Add multiple Cards</h4>
                    </div>
                    <div class="modal-body ui-front">
                        <div id="jsFlash"></div>
                        <h4>Note, that you have to Separate each Card with a new Line.</h4>
                        {{ form_start(massForm) }}

                        <div class=" ui-widget form-group">
                            {{ form_row(massForm.cards) }}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        {{ form_widget(massForm.submit, {'attr' : {'class': 'btn btn-success'}}) }}
                        {{ form_end(massForm) }}

                        {#<button type="button" class="btn btn-primary">Save changes</button>#}
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
    <div class="row">
        <div class="col-md-12 text-center">
            <a href="{{ path('loki.tuo.player.all.show') }}">
                <h3>{{ 'player.list'|trans }}</h3>
            </a>
        </div>
    </div>

    <div class="row" style="margin-top: 20px;">
        <div class="col-md-6 col-md-offset-3 text-center">
            <h2 style="margin-top: 0;">{{ 'ownedcard.show.title %name%'|trans({'%name%' : player.name}) }}</h2>

        </div>
        <div class="col-md-3 text-right">
            {#{% if player.hasKongCredentials %}#}
                <button role="button" type="button" id="update-btn" class="ladda-button" data-style="contract"
                        data-color="blue" data-size="xs" data-player-id="{{ player.id }}">
                    <span class="ladda-label">{{ 'update.inventory'|trans }}<i class=""></i></span>
                </button>
            {#{% endif %}#}
        </div>
    </div>
    <div id="updateFlash"></div>
    <div class="panel panel-info">
        <div class="panel-heading">
            {{ 'ownedcard.show.body.deck %name%'|trans({'%name%' : player.name}) }}<br/>
            {{ deckName | join(', ') }}
        </div>
        <div class="panel-body">
            <table id="deck" class="table table-striped">
                <tbody>
                {% for card in deck %}
                    <tr class="row" id="deck{{ card.id }}">
                        <td class="col-xs-9 card-name">
                            {{ card.toDeckString }}
                        </td>
                        <td class="col-xs-3">
                            <div class="form-group pull-right">
                                <button class="btn btn-danger btn-xs submit-button" name="remove-card-from-deck"
                                        data-id="{{ card.id }}">
                                    <i class="glyphicon glyphicon-minus"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row">
                <p class="col-md-9 col-xs-9">
                    {{ 'ownedcard.show.body.inventory %name%'|trans({'%name%' : player.name}) }}
                </p>
                <div class="col-md-3 col-xs-3">
                    {% if is_granted('ROLE_MODERATOR') or player.isOwnedBy(app.user) %}
                        <a href="{{ path("loki.tuo.ownedcard.card.delete.mass", {'id':player.id}) }}">
                            <button type="button" class="pull-right btn btn-danger btn-md">
                                <i class="glyphicon glyphicon-minus"></i>
                            </button>
                        </a>
                    {% endif %}
                    <a href="{{ path("loki.tuo.player.inventory.show", {'id':player.id}) }}">
                        <button type="button" class="pull-right btn btn-primary btn-md">
                            <i class="glyphicon glyphicon-save"></i>
                        </button>
                    </a>
                    <a>
                        <button type="button" id="btnAddOwnedCardOverlay" class="pull-right btn btn-primary btn-md"
                                data-toggle="modal"
                                data-target="#addOwnedCardModal">
                            <i class="glyphicon glyphicon-plus"></i>
                        </button>
                    </a>
                    <button type="button" class="pull-right btn btn-primary btn-md" data-toggle="modal"
                            data-target="#massAddOwnedCardModal">
                        <i class="glyphicon glyphicon-plus"></i>
                        <i class="glyphicon glyphicon-list-alt"></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <table id="ownedCards" class="table table-striped">
                <tbody>
                {% for card in cards %}
                    <tr class="row" id="{{ card.id }}">
                        <td class="col-xs-9 card-name">
                            {{ card }}
                        </td>
                        <td class="col-xs-3">
                            <div class="form-group pull-right">

                                <button class="btn btn-success btn-xs submit-button" name="add-to-deck"
                                        data-id="{{ card.id }}">
                                    {{ 'ownedcard.show.body.inventory.add.deck'|trans }}
                                </button>
                                <button class="btn btn-danger btn-xs submit-button" name="remove-card"
                                        data-id="{{ card.id }}">
                                    <i class="glyphicon glyphicon-minus"></i>
                                </button>
                                <button class="btn btn-primary btn-xs submit-button" name="add-card"
                                        data-id="{{ card.id }}">
                                    <i class="glyphicon glyphicon-plus"></i>
                                </button>
                            </div>

                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <div class="row" style="margin-top: 20px;">
        <div class="pull-left"><a href="{{ path("tuo.index") }}">{{ 'index.back'|trans }}</a></div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        $(function () {
            var availableCardNames = [];
            $.get("{{ path('loki.tuo.cards.all') }}", function (data) {
                availableCardNames = data;
                $("#owned_card_card").autocomplete({
                    source: availableCardNames,
                    minLength: 3
                });
            });

            $('#update-btn').click(function () {
                var laddaButton = Ladda.create(document.querySelector('#update-btn'));
                laddaButton.start();
                {% set dummyStr = 99999 %}
                var dummyStr = "{{ dummyStr }}";

                var address = "{{ path("loki.tuo.tui.update.player", {'id': dummyStr}) }}";
                var playerId = $(this).data('player-id');
                address = address.replace(dummyStr, playerId);
                $.ajax({
                    url: address,
                    error: function (response, textStatus, errorThrown) {
                        var empty = '<div class="alert alert-dismissible alert-%errorType%" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>%errorMsg%</div>';
                        var flash;
                        if (textStatus === "error" && errorThrown === "Gateway Time-out") {
                            flash = empty.replace('%errorType%', 'warning').replace('%errorMsg%', '{% trans %}ownedcard.player.update.timeout{% endtrans %}');
                        }else {
                            flash = empty.replace('%errorType%', 'danger').replace('%errorMsg%', response.responseJSON.error.exception[0].message);
                        }
                        $('#updateFlash').append(flash);
                        laddaButton.stop();
                    },
                    success: function (response) {
                        console.log("Succ", response);
                        laddaButton.stop();
                        console.log("success");
                        location.reload();
                    }
                });

            });


            $('.submit-button').click(function () {
                var buttonPressed = $(this).attr('name');
                var cardId = $(this).data('id');
                console.log(cardId);
                var url;
                var succCb;
                {% set tId = 1123445567899 %}
                var replaceValue = "{{ tId }}";
                switch (buttonPressed) {
                    case "add-to-deck":
                        url = "{{ path('loki.tuo.ownedcard.deck.add', {'id':tId}) }}";
                        console.log("Button Pressed", buttonPressed);
                        succCb = addToDeckCb;
                        break;
                    case "remove-card":
                        url = "{{ path('loki.tuo.ownedcard.card.remove', {'id':tId}) }}";
                        console.log("Button Pressed", buttonPressed);
                        succCb = reduceCardCb;
                        break;
                    case "add-card":
                        url = "{{ path('loki.tuo.ownedcard.card.add', {'id':tId}) }}";
                        console.log("Button Pressed", buttonPressed);
                        succCb = addCardCb;
                        break;
                    case "remove-card-from-deck":
                        url = "{{ path('loki.tuo.ownedcard.deck.remove', {'id':tId}) }}";
                        succCb = removeFromDeckCb;
                        console.log("Button Pressed", buttonPressed);
                        break;
                    default:
                        console.log("Button Pressed", buttonPressed);
                }
                url = url.replace(replaceValue, cardId);
                var debug = {{ app.environment=="dev"?"true":"false" }};
                if (debug) {
                    url = url + "?XDEBUG_SESSION_START=PHPSTORM";
                }

                sendAjaxRequest([], succCb, "GET", url);
            });

            // Add new Card
            $("form.data-remote").on("submit", function (e) {
                e.preventDefault();
                var $inputs = this.elements;
                console.log("inputs", $inputs);
                var data = {
                    owned_card_card: $inputs['owned_card[card]'].value,
                    owned_card_level: $inputs['owned_card[level]'].value,
                    owned_card_amount: $inputs['owned_card[amount]'].value
                };
                console.log("Data", data);
                sendAddNewCardRequest(data);
            });


            var reduceCardCb = function (response) {
                $('#jsFlash').append(getFlashMessage(true, response['name'], response['level'], response['amount']));
                var id = response['id'];
                var combinedName = getCombinedCardName(response['name'], response['level'], response['amount']);
                if (response['amount'] > 0) {
                    console.log('UPdate');
                    changeAmountOfCardRow(id, combinedName);
                } else {
                    console.log('Delete', id);
                    removeCardRow(id)
                }
            };

            var removeFromDeckCb = function (response) {
                var combinedName = getCombinedCardName(response['name'], response['level'], response['amount']);
                if (response['amount'] === 0) {
                    removeCardRow('deck' + response['id']);
                } else {
                    changeAmountOfCardRow("deck" + response['id'], combinedName);

                }
            };

            var addToDeckCb = function (response) {
                var combinedName = getCombinedCardName(response['name'], response['level'], response['amount']);
                addCardToDeck(response['id'], combinedName, response['amount'], response['level']);
            };

            var addCardCb = function (response) {
                $('#jsFlash').append(getFlashMessage(true, response['name'], response['level'], response['amount']));
                var combinedName = getCombinedCardName(response['name'], response['level'], response['amount']);
                console.log("Adding Card row ", combinedName);
                addCardRow(response['id'], combinedName, response['amount'], response['level']);
            };


            function sendAddNewCardRequest(data) {
                var method = "POST";
                var url = "{{ path('loki.tuo.ownedcard.create', {'id': player.id}) }}";
                sendAjaxRequest(data, addCardCb, method, url)
            }

            /**
             * Sends an Ajax Request, with the given Data to the URL with its method
             * @param data Request Data
             * @param successCallback Method to be executed, if the Request is Successful
             * @param method Request method e.g. "GET"
             * @param url Url of the request
             */
            function sendAjaxRequest(data, successCallback, method, url) {
                $.ajax({
                    method: method,
                    url: url,
                    data: data,
                    error: function (response, textStatus, errorThrown) {
                        console.log("Fail Response", response);
                        console.log("Status", textStatus, " error", errorThrown);

                    },
                    success: successCallback
                });
            }

            function addCardRow(id, combinedName, amount, name, level) {
                console.log(id, combinedName, amount, name, level);
                if ($('#' + id).length !== 0) {
                    changeAmountOfCardRow(id, combinedName);
                    console.log('UPdate Add');

                } else {
                    console.log("Create new Content line");
                    var text = '<tr class="row" id="' + combinedName + '">' +
                        '<td  class="col-xs-9 card-name">' +
                        combinedName +
                        '</td>' +
                        '<td class="col-xs-3">' +
                        '<form class="data-remote-remove">' +
                        '<input type="hidden" name="name" id="name" value="' + name + '">' +
                        '<input type="hidden" name="level" id="level" value="' + level + '">' +
                        '<input type="hidden" name="id" id="id" value="' + id + '">' +
                        '<button type="submit" class="pull-right btn btn-primary btn-xs">' +
                        '<i class="glyphicon glyphicon-minus"></i>' +
                        '</button>' +
                        '</form>' +
                        '</td></tr>';
                    console.log("Insert before ", id);
                    $('#ownedCards').find('tbody').append(text);
                    return text;
                }

            }

            function addCardToDeck(id, combinedName, amount, name, level) {
                console.log(id, combinedName, amount, name, level);
                if ($('#deck' + id).length !== 0) {
                    changeAmountOfCardRow(id, combinedName);
                    console.log('UPdate Add');

                } else {
                    console.log("Create new Content line");
                    var text = '<tr class="row" id="deck' + id + '">' +
                        '<td  class="col-xs-9 card-name">' +
                        combinedName +
                        '</td>' +
                        '<td class="col-xs-3">' +
                        '<form class="data-remote-remove-from-deck">' +
                        '<input type="hidden" name="name" id="name" value="' + name + '">' +
                        '<input type="hidden" name="level" id="level" value="' + level + '">' +
                        '<input type="hidden" name="id" id="id" value="' + id + '">' +
                        '<button type="submit" class="pull-right btn btn-danger btn-xs">' +
                        '<i class="glyphicon glyphicon-minus"></i>' +
                        '</button>' +
                        '</form>' +
                        '</td></tr>';
                    console.log("Insert before ", id);
                    $('#deck').find('tbody').append(text);
                    return text;
                }

            }

            function changeAmountOfCardRow(id, combinedName) {
                console.log("Changing", id);
                var td = $("#" + id + " .card-name");
                td.text(combinedName);
            }

            function removeCardRow(id) {
                $('#' + id).remove();
                console.log("Remove row with id ", id);
            }

            function getCombinedCardName(name, level, amount) {
                var combinedName = name;
                combinedName += (level !== null && level !== 'null') ? "-" + level : "";
                combinedName += amount > 1 ? " (" + amount + ")" : "";
                return combinedName;
            }

            function getFlashMessage(successful, name, level, amount) {
                var cssClass = (successful) ? 'alert-success' : 'alert-danger';
                if (successful) {
                    var msg = "{{ 'ownedcard.show.body.inventory.add.success'|trans }}".replace("_NAME_", name).replace('_LEVEL_', level).replace('_AMOUNT_', amount);
                    text = "<strong>{{ 'success'|trans }}: </strong>" + msg;
                }

                return '<div class="alert alert-dismissible ' + cssClass + '" role="alert">' +
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' + text + '</div>';
            }

        });
    </script>
{% endblock %}
